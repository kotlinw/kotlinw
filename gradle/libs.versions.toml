[versions]

# https://github.com/JetBrains/kotlin
kotlin = "2.0.0"

# https://github.com/spring-projects/spring-boot/releases
#springBoot = "3.2.0"

# https://github.com/ktorio/ktor/releases
ktor = "3.0.0-beta-2"

# https://junit.org/junit5/docs/current/release-notes/index.html
junit = "5.10.0"

# https://github.com/Kotlin/kotlinx.serialization/releases
serialization = "1.7.1"

# https://github.com/Kotlin/kotlinx.coroutines/releases
coroutines = "1.8.1"

# https://github.com/Kotlin/kotlinx-io/releases
kotlinx-io = "0.5.1"

# https://github.com/arrow-kt/arrow/releases
arrow = "1.2.4"

# https://repo.maven.apache.org/maven2/io/arrow-kt/arrow-optics-ksp-plugin/
arrowOpticsKspPlugin = "1.2.4"

# https://github.com/arrow-kt/arrow-gradle-config/releases
arrowGradleConfig = "0.12.0-rc.5"

# https://github.com/DevSrSouza/compose-icons/releases
devsrsouzaComposeIcons = "1.0.0"

# https://github.com/JetBrains/compose-jb/releases
compose = "1.6.11"

# https://github.com/huxi/sulky/tags
huxiSulky = "8.3.0"

# https://github.com/keycloak/keycloak/releases
keycloak = "20.0.0"

# https://github.com/JetBrains/skiko/releases
skiko = "0.8.10"

# https://github.com/mipt-npm/kmath/releases
kmath = "0.3.1"

jaxb = "2.3.2"

#cxf = "3.5.3"

jaxws = "4.0.2"

# https://github.com/mockk/mockk/releases
mockk = "1.12.7"

# https://github.com/JetBrains/kotlin-wrappers/releases
kotlinWrappers = "1.0.0-pre.751"

# https://github.com/testcontainers/testcontainers-java/releases
testcontainers = "1.20.1"

cache4k = "0.9.0"

slf4j = "2.0.13"

logback = "1.5.6"

flowredux = "1.0.2"

mina = "2.9.2"

ksp = "2.0.0-1.0.24"

kotlinpoet = "1.18.1"

okio = "3.5.0"

ktoml = "0.5.0"

kotlinresult = "2.0.0"

hibernate = "6.6.0.CR1"

agp = "8.1.0"

androidx-appcompat = "1.6.2"
androidx-activityCompose = "1.7.2"
compose-uitooling = "1.6.11"

libres = "1.1.8"
voyager = "1.0.0-rc07"
composeImageLoader = "1.6.6"
napier = "2.6.1"
buildConfig = "4.1.1"

kobweb = "0.18.0"

pdvrieze-xmlutil = "0.90.1"

# https://github.com/johnrengelman/shadow/releases
shadow = "8.1.1"

androidxCollection = "1.3.0"

[libraries]

androidx-collection = { module = "androidx.collection:collection", version.ref = "androidxCollection" }

ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ksp-impl = { module = "com.google.devtools.ksp:symbol-processing", version.ref = "ksp" }

kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }
kotlinpoet-metadata = { module = "com.squareup:kotlinpoet-metadata", version.ref = "kotlinpoet" }

tschuchortdev-compiletesting-ksp = { module = "com.github.tschuchortdev:kotlin-compile-testing-ksp", version = "1.5.0" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }

jaxws-ri = { module = "com.sun.xml.ws:jaxws-ri", version.ref = "jaxws" }

#cxf-rt-frontend-jaxws = { module = "org.apache.cxf:cxf-rt-frontend-jaxws", version.ref = "cxf" }
#cxf-rt-transports-http = { module = "org.apache.cxf:cxf-rt-transports-http", version.ref = "cxf" }
#cxf-spring-boot-starter-jaxrs = { module = "org.apache.cxf:cxf-spring-boot-starter-jaxrs", version.ref = "cxf" }
#cxf-spring-boot-starter-jaxws = { module = "org.apache.cxf:cxf-spring-boot-starter-jaxws", version.ref = "cxf" }

#jaxb-api = { module = "jakarta.xml.bind:jakarta.xml.bind-api", version.ref = "jaxb" }
#jaxb-impl = { module = "com.sun.xml.bind:jaxb-ri", version.ref = "jaxb" }

keycloak-adapter-installed = { module = "org.keycloak:keycloak-installed-adapter", version.ref = "keycloak" }

kmath-complex = { module = "space.kscience:kmath-complex", version.ref = "kmath" }
kmath-core = { module = "space.kscience:kmath-core", version.ref = "kmath" }
kmath-real = { module = "space.kscience:kmath-real", version.ref = "kmath" }

jetbrains-skiko = { module = "org.jetbrains.skiko:skiko", version.ref = "skiko" }
jetbrains-markdown = { module = "org.jetbrains:markdown", version = "0.7.0" }

jetbrains-compose-runtime = { module = "org.jetbrains.compose.runtime:runtime", version.ref = "compose" }
jetbrains-compose-html-core = { module = "org.jetbrains.compose.html:html-core", version.ref = "compose" }
jetbrains-compose-html-svg = { module = "org.jetbrains.compose.html:html-svg", version.ref = "compose" }
jetbrains-compose-material-materialiconsextended = { module = "org.jetbrains.compose.material:material-icons-extended", version.ref = "compose" }
jetbrains-compose-components-desktop-splitpane = { module = "org.jetbrains.compose.components:components-splitpane-desktop", version.ref = "compose" }

arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-optics = { module = "io.arrow-kt:arrow-optics", version.ref = "arrow" }
arrow-resilience = { module = "io.arrow-kt:arrow-resilience", version.ref = "arrow" }
arrow-fx-coroutines = { module = "io.arrow-kt:arrow-fx-coroutines", version.ref = "arrow" }
arrow-optics-ksp-plugin = { module = "io.arrow-kt:arrow-optics-ksp-plugin", version.ref = "arrowOpticsKspPlugin" }

kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-scripting-jsr223 = { module = "org.jetbrains.kotlin:kotlin-scripting-jsr223", version.ref = "kotlin" }

kotlinjs-wrappers-bom = { module = "org.jetbrains.kotlin-wrappers:kotlin-wrappers-bom", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-browser = { module = "org.jetbrains.kotlin-wrappers:kotlin-browser", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-cesium = { module = "org.jetbrains.kotlin-wrappers:kotlin-cesium", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-css = { module = "org.jetbrains.kotlin-wrappers:kotlin-css", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-csstype = { module = "org.jetbrains.kotlin-wrappers:kotlin-csstype", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-emotion = { module = "org.jetbrains.kotlin-wrappers:kotlin-emotion", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-extensions = { module = "org.jetbrains.kotlin-wrappers:kotlin-extensions", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-history = { module = "org.jetbrains.kotlin-wrappers:kotlin-history", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-js = { module = "org.jetbrains.kotlin-wrappers:kotlin-js", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-mui = { module = "org.jetbrains.kotlin-wrappers:kotlin-mui", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-mui-icons = { module = "org.jetbrains.kotlin-wrappers:kotlin-mui-icons", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-node = { module = "org.jetbrains.kotlin-wrappers:kotlin-node", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-popper = { module = "org.jetbrains.kotlin-wrappers:kotlin-popper", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react = { module = "org.jetbrains.kotlin-wrappers:kotlin-react", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-beautiful-dnd = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-beautiful-dnd", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-core = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-core", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-dom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-dom", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-dom-legacy = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-dom-legacy", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-legacy = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-legacy", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-popper = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-popper", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-query = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-query", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-redux = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-redux", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-router-dom = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-router-dom", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-table = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-table", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-react-virtual = { module = "org.jetbrains.kotlin-wrappers:kotlin-react-virtual", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-redux = { module = "org.jetbrains.kotlin-wrappers:kotlin-redux", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-ring-ui = { module = "org.jetbrains.kotlin-wrappers:kotlin-ring-ui", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-styled = { module = "org.jetbrains.kotlin-wrappers:kotlin-styled", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-styled-next = { module = "org.jetbrains.kotlin-wrappers:kotlin-styled-next", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-tanstack-query-core = { module = "org.jetbrains.kotlin-wrappers:kotlin-tanstack-query-core", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-tanstack-react-query = { module = "org.jetbrains.kotlin-wrappers:kotlin-tanstack-react-query", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-tanstack-react-table = { module = "org.jetbrains.kotlin-wrappers:kotlin-tanstack-react-table", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-tanstack-react-virtual = { module = "org.jetbrains.kotlin-wrappers:kotlin-tanstack-react-virtual", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-tanstack-table-core = { module = "org.jetbrains.kotlin-wrappers:kotlin-tanstack-table-core", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-tanstack-virtual-core = { module = "org.jetbrains.kotlin-wrappers:kotlin-tanstack-virtual-core", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-typescript = { module = "org.jetbrains.kotlin-wrappers:kotlin-typescript", version.ref = "kotlinWrappers" }
kotlinjs-wrappers-web = { module = "org.jetbrains.kotlin-wrappers:kotlin-web", version.ref = "kotlinWrappers" }

# https://github.com/johnrengelman/shadow/releases
gradle-plugin-shadow = { module = "gradle.plugin.com.github.jengelman.gradle.plugins:shadow", version = "7.1.2" }

# https://github.com/Kotlin/kotlinx.collections.immutable/releases
kotlinx-collections-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version = "0.3.5" }

# https://github.com/Kotlin/kotlinx-datetime/releases
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.5.0" }

kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-serialization-properties = { module = "org.jetbrains.kotlinx:kotlinx-serialization-properties", version.ref = "serialization" }

pdvrieze-xmlutil-core = { module = "io.github.pdvrieze.xmlutil:core", version.ref = "pdvrieze-xmlutil" }
pdvrieze-xmlutil-serialization = { module = "io.github.pdvrieze.xmlutil:serialization", version.ref = "pdvrieze-xmlutil" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-debug = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-debug", version.ref = "coroutines" }
kotlinx-coroutines-slf4j = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-slf4j", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version = "0.23.1" }

kotlinx-io-bytestring = { module = "org.jetbrains.kotlinx:kotlinx-io-bytestring", version.ref = "kotlinx-io" }
kotlinx-io-core = { module = "org.jetbrains.kotlinx:kotlinx-io-core", version.ref = "kotlinx-io" }

#spring-boot-bom = { module = "org.springframework.boot:spring-boot-dependencies", version.ref = "springBoot" }
#spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
#spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "springBoot" }
#spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "springBoot" }
#gradle-plugin-spring-boot = { module = "org.springframework.boot:spring-boot-gradle-plugin", version.ref = "springBoot" }
#spring-boot-starter-oauth2server = { module = "org.springframework.boot:spring-boot-starter-oauth2-authorization-server", version.ref = "springBoot" }
#spring-context = { module = "org.springframework:spring-context" }
#spring-web = { module = "org.springframework:spring-web" }

projectreactor-blockhound = { module = "io.projectreactor.tools:blockhound", version = "1.0.8.RELEASE" }

jakarta-mail = { module = "jakarta.mail:jakarta.mail-api", version = "2.1.0" }
jakarta-annotation-api = { module = "jakarta.annotation:jakarta.annotation-api", version = "2.1.1" }

ktor-bom = { module = "io.ktor:ktor-bom", version.ref = "ktor" }
ktor-utils = { module = "io.ktor:ktor-utils", version.ref = "ktor" }
ktor-client-apache = { module = "io.ktor:ktor-client-apache", version.ref = "ktor" }
ktor-client-auth-core = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-resources = { module = "io.ktor:ktor-client-resources", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-http = { module = "io.ktor:ktor-http", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth-core = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-caching-headers = { module = "io.ktor:ktor-server-caching-headers", version.ref = "ktor" }
ktor-server-calllogging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-server-host-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }
ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-websockets = { module = "io.ktor:ktor-server-websockets", version.ref = "ktor" }
ktor-server-sessions = { module = "io.ktor:ktor-server-sessions", version.ref = "ktor" }
ktor-websockets = { module = "io.ktor:ktor-websockets", version.ref = "ktor" }

junit-bom = { module = "org.junit:junit-bom", version.ref = "junit" }

hibernate-core = { module = "org.hibernate.orm:hibernate-core", version.ref = "hibernate" }
hibernate-envers = { module = "org.hibernate.orm:hibernate-envers", version.ref = "hibernate" }
hibernate-graalvm = { module = "org.hibernate.orm:hibernate-graalvm", version.ref = "hibernate" }
hibernate-hikaricp = { module = "org.hibernate.orm:hibernate-hikaricp", version.ref = "hibernate" }

protobuf-java = { module = "com.google.protobuf:protobuf-java", version = "3.19.6" }

# https://github.com/DevSrSouza/compose-icons/blob/master/simple-icons/DOCUMENTATION.md
devsrsouza-compose-icons-simpleicons = { module = "br.com.devsrsouza.compose.icons.jetbrains:simple-icons", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/feather/DOCUMENTATION.md
devsrsouza-compose-icons-feather = { module = "br.com.devsrsouza.compose.icons.jetbrains:feather", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/tabler-icons/DOCUMENTATION.md
devsrsouza-compose-icons-tablericons = { module = "br.com.devsrsouza.compose.icons.jetbrains:tabler-icons", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/eva-icons/DOCUMENTATION.md
devsrsouza-compose-icons-evaicons = { module = "br.com.devsrsouza.compose.icons.jetbrains:eva-icons", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/font-awesome/DOCUMENTATION.md
devsrsouza-compose-icons-fontawesome = { module = "br.com.devsrsouza.compose.icons.jetbrains:font-awesome", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/octicons/DOCUMENTATION.md
devsrsouza-compose-icons-octicons = { module = "br.com.devsrsouza.compose.icons.jetbrains:octicons", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/linea/DOCUMENTATION.md
devsrsouza-compose-icons-linea = { module = "br.com.devsrsouza.compose.icons.jetbrains:linea", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/line-awesome/DOCUMENTATION.md
devsrsouza-compose-icons-lineawesome = { module = "br.com.devsrsouza.compose.icons.jetbrains:line-awesome", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/erikflowers-weather-icons/DOCUMENTATION.md
devsrsouza-compose-icons-erikflowersweathericons = { module = "br.com.devsrsouza.compose.icons.jetbrains:erikflowers-weather-icons", version.ref = "devsrsouzaComposeIcons" }
# https://github.com/DevSrSouza/compose-icons/blob/master/css-gg/DOCUMENTATION.md
devsrsouza-compose-icons-cssgg = { module = "br.com.devsrsouza.compose.icons.jetbrains:css-gg", version.ref = "devsrsouzaComposeIcons" }

# https://jdbc.postgresql.org/
postgresql-driver = { module = "org.postgresql:postgresql", version = "42.7.3" }

# https://github.com/vladmihalcea/hibernate-types/tags
# vladmihalcea-hibernatetypes = { module = "com.vladmihalcea:hibernate-types-60", version = "2.19.0" }

# https://github.com/zeroturnaround/zt-process-killer/tags
zt-processkiller = { module = "org.zeroturnaround:zt-process-killer", version = "1.10" }

# https://github.com/zeroturnaround/zt-exec/tags
zt-exec = { module = "org.zeroturnaround:zt-exec", version = "1.12" }

huxi-sulky-ulid = { module = "de.huxhorn.sulky:de.huxhorn.sulky.ulid", version.ref = "huxiSulky" }

servlet-api = { module = "jakarta-servlet:servlet-api" }

testcontainers-bom = { module = "org.testcontainers:testcontainers-bom", version.ref = "testcontainers" }
testcontainers-postgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainers-junit-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-keycloak = { module = "com.github.dasniko:testcontainers-keycloak", version = "3.0.0" }

cache4k = { module = "io.github.reactivecircus.cache4k:cache4k", version.ref = "cache4k" }

springmockk = { module = "com.ninja-squad:springmockk", version = "4.0.0" }

slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }

logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

zip4j = { module = "net.lingala.zip4j:zip4j", version = "2.11.5" }

flowredux-jvm = { module = "com.freeletics.flowredux:flowredux-jvm", version.ref = "flowredux" }
flowredux-compose = { module = "com.freeletics.flowredux:compose", version.ref = "flowredux" }
flowredux-multiplatform = { module = "com.freeletics.flowredux:flowredux", version.ref = "flowredux" }

kotter = { module = "com.varabyte.kotter:kotter", version = "1.0.2" }

clikt = { module = "com.github.ajalt.clikt:clikt", version = "4.2.1" }

mina-sshd-core = { module = "org.apache.sshd:sshd-core", version.ref = "mina" }
mina-sshd-scp = { module = "org.apache.sshd:sshd-scp", version.ref = "mina" }

okio-core = { module = "com.squareup.okio:okio", version.ref = "okio" }

turbine = { module = "app.cash.turbine:turbine", version = "1.1.0" }

ktoml-core = { module = "com.akuleshov7:ktoml-core", version.ref = "ktoml" }
ktoml-file = { module = "com.akuleshov7:ktoml-file", version.ref = "ktoml" }
ktoml-source = { module = "com.akuleshov7:ktoml-source", version.ref = "ktoml" }

kotlinresult-core = { module = "com.michael-bull.kotlin-result:kotlin-result", version.ref = "kotlinresult" }
kotlinresult-coroutines = { module = "com.michael-bull.kotlin-result:kotlin-result-coroutines", version.ref = "kotlinresult" }

h2 = { module = "com.h2database:h2", version = "2.1.212" }

kotlinx-html = { module = "org.jetbrains.kotlinx:kotlinx-html", version = "0.9.1" }

google-api-services-homegraph = { module = "com.google.apis:google-api-services-homegraph", version = "v1-rev20230707-2.0.0" }
google-actions = { module = "com.google.actions:actions-on-google", version = "1.8.0" }

androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
libres = { module = "io.github.skeptick.libres:libres-compose", version.ref = "libres" }
voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
napier = { module = "io.github.aakira:napier", version.ref = "napier" }
russhwolf-settings = { module = "com.russhwolf:multiplatform-settings", version = "1.0.0" }

kobweb-api = { module = "com.varabyte.kobweb:kobweb-api", version.ref = "kobweb" }
kobweb-compose-core = { module = "com.varabyte.kobweb:kobweb-compose", version.ref = "kobweb" }
kobweb-compose-html-ext = { module = "com.varabyte.kobweb:compose-html-ext", version.ref = "kobweb" }
kobweb-silk-foundation = { module = "com.varabyte.kobweb:silk-foundation", version.ref = "kobweb" }
kobweb-silk-icons-fa = { module = "com.varabyte.kobwebx:silk-icons-fa", version.ref = "kobweb" }

classgraph = { module = "io.github.classgraph:classgraph", version = "4.8.163" }

net-openhft-zeroAllocationHashing = { module = "net.openhft:zero-allocation-hashing", version = "0.16" }

oshi-core = { module = "com.github.oshi:oshi-core", version = "6.4.12" }

rebugger = { module = "io.github.theapache64:rebugger", version = "1.0.0-rc02" }

softwork-routing = { module = "app.softwork:routing-compose", version = "0.2.14" }

kotunil = { module = "eu.sirotin.kotunil:kotunil", version = "4.2.1" }

semver = { module = "net.swiftzer.semver:semver", version = "2.0.0" }

jsoup = { module = "org.jsoup:jsoup", version = "1.17.2" }

htmlunit = { module = "org.htmlunit:htmlunit", version = "4.0.0" }

selenium-java = { module = "org.seleniumhq.selenium:selenium-java", version = "4.19.1" }

aircompressor = { module = "io.airlift:aircompressor", version = "0.26" }

jackson-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version = "2.17.0" }

composeHtmlLazyLayouts = { module = "dev.opensavvy.compose.lazy:lazy-layouts", version = "0.2.6" }

[plugins]

arrowGradleConfig-jvm = { id = "io.arrow-kt.arrow-gradle-config-jvm", version.ref = "arrowGradleConfig" }
arrowGradleConfig-multiplatform = { id = "io.arrow-kt.arrow-gradle-config-multiplatform", version.ref = "arrowGradleConfig" }
